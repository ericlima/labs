version: '3' 

volumes:
  postgres_data:
  kafka_data:
  zookeeper_data:
  mongo_data:
  
services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres_data:/data/postgres

  zookeeper:
    image: fjardim/zookeeper
    container_name: zookeeper
    hostname: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/opt/zookeeper-3.4.6/data
    deploy:
      resources:
        limits:
          memory: 500m

  kafka:
    image: fjardim/kafka
    container_name: kafka
    hostname: kafka
    restart: unless-stopped
    ports:
      - "9092:9092"
    volumes:
      - kafka_data:/kafka/kafka-logs-kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'yes'
    deploy:
      resources:
        limits:
          memory: 500m
  redis-server: 
    image: 'redis'
    container_name: redis
    hostname: redis
    restart: unless-stopped
    ports:
      - 6379:6379

  mongo:
    image: mongo
    container_name: mongo
    hostname: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data
    deploy:
      resources:
        limits:
          memory: 500m
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    hostname: mongo_express
    restart: unless-stopped
    ports:
      - 28081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo
    deploy:
      resources:
        limits:
          memory: 200m
 
      